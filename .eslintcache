[{"E:\\React\\git\\skara-social-net\\src\\index.js":"1","E:\\React\\git\\skara-social-net\\src\\App.js":"2","E:\\React\\git\\skara-social-net\\src\\redux\\redux-store.js":"3","E:\\React\\git\\skara-social-net\\src\\Components\\Navbar\\Navbar.jsx":"4","E:\\React\\git\\skara-social-net\\src\\Components\\Profile\\ProfileContainer.jsx":"5","E:\\React\\git\\skara-social-net\\src\\redux\\auth-reducer.js":"6","E:\\React\\git\\skara-social-net\\src\\redux\\app-reducer.js":"7","E:\\React\\git\\skara-social-net\\src\\redux\\profile-reducer.js":"8","E:\\React\\git\\skara-social-net\\src\\redux\\dialogs-reducer.js":"9","E:\\React\\git\\skara-social-net\\src\\redux\\users-reducer.js":"10","E:\\React\\git\\skara-social-net\\src\\Components\\Users\\UsersConteiner.jsx":"11","E:\\React\\git\\skara-social-net\\src\\Components\\Preloader\\Preloader.jsx":"12","E:\\React\\git\\skara-social-net\\src\\Components\\Header\\HeaderContainer.jsx":"13","E:\\React\\git\\skara-social-net\\src\\Components\\Login\\Login.jsx":"14","E:\\React\\git\\skara-social-net\\src\\Components\\Dialogs\\DialogsConteiner.jsx":"15","E:\\React\\git\\skara-social-net\\src\\Components\\Profile\\Profile.jsx":"16","E:\\React\\git\\skara-social-net\\src\\api\\api.js":"17","E:\\React\\git\\skara-social-net\\src\\redux\\users-selectors.js":"18","E:\\React\\git\\skara-social-net\\src\\Components\\Users\\Users.jsx":"19","E:\\React\\git\\skara-social-net\\src\\Components\\Header\\Header.jsx":"20","E:\\React\\git\\skara-social-net\\src\\Components\\Dialogs\\Dialogs.jsx":"21","E:\\React\\git\\skara-social-net\\src\\Components\\Hoc\\withAuthComponent.jsx":"22","E:\\React\\git\\skara-social-net\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"23","E:\\React\\git\\skara-social-net\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.jsx":"24","E:\\React\\git\\skara-social-net\\src\\Components\\Dialogs\\DialogItem\\DialogItem.jsx":"25","E:\\React\\git\\skara-social-net\\src\\Components\\Dialogs\\Message\\Message.jsx":"26","E:\\React\\git\\skara-social-net\\src\\Components\\Dialogs\\AddMessageForm\\AddMessageForm.jsx":"27","E:\\React\\git\\skara-social-net\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.jsx":"28","E:\\React\\git\\skara-social-net\\src\\Components\\Profile\\MyPosts\\MyPosts.jsx":"29","E:\\React\\git\\skara-social-net\\src\\Components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx":"30","E:\\React\\git\\skara-social-net\\src\\utils\\FormsControls.jsx":"31","E:\\React\\git\\skara-social-net\\src\\utils\\validators\\validator.jsx":"32","E:\\React\\git\\skara-social-net\\src\\Components\\Profile\\MyPosts\\Post\\Post.jsx":"33","E:\\React\\git\\skara-social-net\\src\\utils\\object-helpers.js":"34","E:\\React\\git\\skara-social-net\\src\\utils\\Paginator.jsx":"35","E:\\React\\git\\skara-social-net\\src\\Components\\Users\\User.jsx":"36"},{"size":476,"mtime":1613073681349,"results":"37","hashOfConfig":"38"},{"size":1746,"mtime":1619125238508,"results":"39","hashOfConfig":"38"},{"size":715,"mtime":1617737324431,"results":"40","hashOfConfig":"38"},{"size":971,"mtime":1613237227248,"results":"41","hashOfConfig":"38"},{"size":1153,"mtime":1617828464605,"results":"42","hashOfConfig":"38"},{"size":1591,"mtime":1619119945664,"results":"43","hashOfConfig":"38"},{"size":831,"mtime":1619124971135,"results":"44","hashOfConfig":"38"},{"size":2215,"mtime":1619122390402,"results":"45","hashOfConfig":"38"},{"size":1261,"mtime":1617047862658,"results":"46","hashOfConfig":"38"},{"size":3790,"mtime":1619126862807,"results":"47","hashOfConfig":"38"},{"size":1871,"mtime":1619207714712,"results":"48","hashOfConfig":"38"},{"size":243,"mtime":1614172433710,"results":"49","hashOfConfig":"38"},{"size":447,"mtime":1617737075884,"results":"50","hashOfConfig":"38"},{"size":4084,"mtime":1619118755896,"results":"51","hashOfConfig":"38"},{"size":616,"mtime":1617049348016,"results":"52","hashOfConfig":"38"},{"size":384,"mtime":1616605442159,"results":"53","hashOfConfig":"38"},{"size":1411,"mtime":1617649692170,"results":"54","hashOfConfig":"38"},{"size":704,"mtime":1618436397371,"results":"55","hashOfConfig":"38"},{"size":811,"mtime":1619126334085,"results":"56","hashOfConfig":"38"},{"size":623,"mtime":1617916839386,"results":"57","hashOfConfig":"38"},{"size":1295,"mtime":1617302738169,"results":"58","hashOfConfig":"38"},{"size":611,"mtime":1616612377191,"results":"59","hashOfConfig":"38"},{"size":880,"mtime":1619207714738,"results":"60","hashOfConfig":"38"},{"size":622,"mtime":1617050120150,"results":"61","hashOfConfig":"38"},{"size":360,"mtime":1612353126124,"results":"62","hashOfConfig":"38"},{"size":207,"mtime":1612278911672,"results":"63","hashOfConfig":"38"},{"size":815,"mtime":1617302738157,"results":"64","hashOfConfig":"38"},{"size":1517,"mtime":1616698770046,"results":"65","hashOfConfig":"38"},{"size":1408,"mtime":1617220009405,"results":"66","hashOfConfig":"38"},{"size":1057,"mtime":1617829256838,"results":"67","hashOfConfig":"38"},{"size":1438,"mtime":1619118864382,"results":"68","hashOfConfig":"38"},{"size":275,"mtime":1617219686782,"results":"69","hashOfConfig":"38"},{"size":336,"mtime":1612377516618,"results":"70","hashOfConfig":"38"},{"size":216,"mtime":1618414122425,"results":"71","hashOfConfig":"38"},{"size":682,"mtime":1619207359683,"results":"72","hashOfConfig":"38"},{"size":1657,"mtime":1619125014418,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"bsqf97",{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"76"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"76"},"E:\\React\\git\\skara-social-net\\src\\index.js",[],["165","166"],"E:\\React\\git\\skara-social-net\\src\\App.js",["167"],"import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar/Navbar';\nimport {Route, withRouter} from \"react-router-dom\";\nimport DialogsConteiner from \"./Components/Dialogs/DialogsConteiner\";\nimport UsersConteiner from \"./Components/Users/UsersConteiner\";\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport LoginPage from \"./Components/Login/Login\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./Components/Preloader/Preloader\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"./redux/auth-reducer\";\nimport {compose} from \"redux\";\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs'\n                           render={() => <DialogsConteiner/>}/>\n                    <Route path='/profile/:userId?'\n                           render={() => <ProfileContainer/>}/>\n                    <Route path='/users'\n                           render={() => <UsersConteiner/>}/>\n                    <Route path='/login'\n                           render={() => <LoginPage/>}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose(\n    connect(mapStateToProps, {\n        initializeApp,\n        logout\n    }))(App);","E:\\React\\git\\skara-social-net\\src\\redux\\redux-store.js",[],"E:\\React\\git\\skara-social-net\\src\\Components\\Navbar\\Navbar.jsx",["168"],"import React from \"react\";\r\nimport s from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Nav = (props) => {\r\n\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}><NavLink to=\"/profile\" activeClassName={s.activeLink}>\r\n            Profile </NavLink></div>\r\n        <div className={s.item}><NavLink to=\"/dialogs\" activeClassName={s.activeLink}>\r\n            Messages </NavLink></div>\r\n        <div className={s.item}><NavLink to=\"/news\" activeClassName={s.activeLink}>\r\n            News </NavLink></div>\r\n        <div className={s.item}><NavLink to=\"/music\" activeClassName={s.activeLink}>\r\n            Music </NavLink></div>\r\n        <div className={s.item}><NavLink to=\"/settings\" activeClassName={s.activeLink}>\r\n            <a> Settings </a></NavLink></div>\r\n        <div className={s.item}><NavLink to=\"/users\" activeClassName={s.activeLink}>\r\n            <p> Friends </p></NavLink></div>\r\n    </nav>\r\n}\r\nexport default Nav;","E:\\React\\git\\skara-social-net\\src\\Components\\Profile\\ProfileContainer.jsx",[],"E:\\React\\git\\skara-social-net\\src\\redux\\auth-reducer.js",[],"E:\\React\\git\\skara-social-net\\src\\redux\\app-reducer.js",["169","170"],"import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer;","E:\\React\\git\\skara-social-net\\src\\redux\\profile-reducer.js",["171","172"],"import {profileAPI, userAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_USER_STATUS = \"SET_USER_STATUS\"\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            id: 1, message: \"Hi\", likesCount: 12, avatar:\r\n                <img src=\"https://kisapes.ru/wp-content/uploads/2020/10/velsh-korgi-pembrok.jpg\"/>\r\n        },\r\n        {\r\n            id: 2, message: \"Hi man\", likesCount: 7, avatar:\r\n                <img src=\"https://kisapes.ru/wp-content/uploads/2020/10/velsh-korgi-pembrok.jpg\"/>\r\n        }\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 7,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_USER_STATUS, status});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await userAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(status);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;","E:\\React\\git\\skara-social-net\\src\\redux\\dialogs-reducer.js",["173","174","175"],"\r\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\nlet initialState = {\r\n\r\n    dialogs: [\r\n        {\r\n            id: 1, name: \"Sveta\", avatar:\r\n                <img\r\n                    src=\"https://static5.depositphotos.com/1003371/521/i/600/depositphotos_5214674-stock-photo-tropical-sea-sunset.jpg\"/>\r\n        },\r\n        {\r\n            id: 2, name: \"Dasha\", avatar:\r\n                <img src=\"https://millionstatusov.ru/pic/statpic/all8/5e04c21a52a39.jpg\"/>\r\n        },\r\n        {\r\n            id: 3, name: \"Masha\", avatar:\r\n                <img src=\"https://klike.net/uploads/posts/2018-06/1530090978_1.jpg\"/>\r\n        }\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How are you\"},\r\n        {id: 3, message: \"I'm fine\"}\r\n    ]\r\n}\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n               case SEND_MESSAGE:\r\n            let body = action.newMassageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","E:\\React\\git\\skara-social-net\\src\\redux\\users-reducer.js",["176"],"import {userAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FETCHING_PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId,\r\n                    \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\",\r\n                    {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state, setCurrentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state, totalUsersCount: action.count\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await userAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\nconst followUnfollowFlow = async (dispatch, userId,\r\n                                  apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId,\r\n            userAPI.follow.bind(userAPI), followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId,\r\n            userAPI.unfollow.bind(userAPI), unfollowSuccess)\r\n    }\r\n}\r\nexport default usersReducer;\r\n","E:\\React\\git\\skara-social-net\\src\\Components\\Users\\UsersConteiner.jsx",[],"E:\\React\\git\\skara-social-net\\src\\Components\\Preloader\\Preloader.jsx",["177"],"import React from 'react';\r\nimport preloader from '../../img/preloader.gif';\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","E:\\React\\git\\skara-social-net\\src\\Components\\Header\\HeaderContainer.jsx",[],"E:\\React\\git\\skara-social-net\\src\\Components\\Login\\Login.jsx",["178"],"import React from 'react';\r\nimport {createField, Input} from \"../../utils/FormsControls\";\r\nimport {required} from \"../../utils/validators/validator\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport style from \"../../utils/FormsControls.module.css\"\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\",\r\n                [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", null,\r\n                Input,{type: \"checkbox\"}, \"remember me\")}\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n\r\n{/*const validationsSchema = yup.object().shape({\r\n    email: yup.string().required(\"Must have\")\r\n        .email(\"Enter real email\")\r\n        .min(5, 'Must be exactly 5 digits')\r\n        .max(20, 'Must be exactly 20 digits'),\r\n    password: yup.string().required(\"Must have\")\r\n        .min(5, 'Must be exactly 5 digits')\r\n        .max(10, 'Must be exactly 10 digits')\r\n})\r\nreturn (\r\n    <Formik\r\n        initialValues={{\r\n            email: \"\",\r\n            password: \"\",\r\n        }}\r\n        validateOnBlur\r\n        onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n                alert(JSON.stringify(values, null, 2));\r\n                setSubmitting(false);\r\n            }, 400);\r\n        }}\r\n        validationsSchema={validationsSchema}\r\n    >\r\n        {({values, errors,\r\n              touched, handleChange,\r\n              handleBlur,\r\n              isValid,handleSubmit, dirty}) => (\r\n            <div>\r\n                <p>\r\n                    <label htmlFor={`email`}>Email</label><br/>\r\n                    <input\r\n                        type={`email`}\r\n                        name={`email`}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.email}/>\r\n                </p>\r\n                {touched.email && errors.email && <p\r\n                >{errors.email}</p>}\r\n                <p>\r\n                    <label htmlFor={`password`}>Password</label><br/>\r\n                    <input\r\n                        type={`password`}\r\n                        name={`password`}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.password}/>\r\n                </p>\r\n                {touched.password && errors.password && <p\r\n                >{errors.password}</p>}\r\n                <p>\r\n                    <label htmlFor={`checkbox`}>Remember Me</label><br/>\r\n                    <input\r\n                        type={`checkbox`}\r\n                        name={`rememberMe`}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.rememberMe}/>\r\n                </p>\r\n                <button\r\n                    disabled={!isValid && !dirty}\r\n                    onClick={handleSubmit}\r\n                    type={`submit`}\r\n                    className=\"custom-btn-toolbar\"\r\n                >Login\r\n                </button>\r\n            </div>\r\n        )}\r\n    </Formik>*/\r\n}\r\n\r\n","E:\\React\\git\\skara-social-net\\src\\Components\\Dialogs\\DialogsConteiner.jsx",["179"],"import React from \"react\";\r\nimport {sendMessageCreator}\r\n    from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../Hoc/withAuthComponent\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    dialogsPage: state.dialogsPage,\r\n})\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\nreturn {\r\n    sendMessage: (newMessageBody) => {\r\n        dispatch(sendMessageCreator(newMessageBody))\r\n    }\r\n}\r\n}\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs);","E:\\React\\git\\skara-social-net\\src\\Components\\Profile\\Profile.jsx",[],"E:\\React\\git\\skara-social-net\\src\\api\\api.js",[],"E:\\React\\git\\skara-social-net\\src\\redux\\users-selectors.js",[],"E:\\React\\git\\skara-social-net\\src\\Components\\Users\\Users.jsx",[],"E:\\React\\git\\skara-social-net\\src\\Components\\Header\\Header.jsx",["180"],"import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Header = (props) => {\r\n    return   <header className={s.header}>\r\n        <img src=\"https://www.yorkgraphicdesigners.co.uk/wp-content/uploads/2020/04/coronavirus_logo-2.jpg\"/>\r\n    <div className={s.loginBlock}>\r\n        {props.isAuth ? <div>{props.login} -\r\n                <Button onClick={props.logout} variant=\"primary\">Log out</Button>\r\n        </div>\r\n        : <NavLink to={\"/login\"}>Login</NavLink> }\r\n    </div>\r\n    </header>\r\n}\r\nexport default Header;","E:\\React\\git\\skara-social-net\\src\\Components\\Dialogs\\Dialogs.jsx",["181"],"import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {AddMessageForm} from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements =\r\n        state.dialogs.map(d =>\r\n            <DialogItem name={d.name} key={d.id} avatar={d.avatar}/>);\r\n\r\n    let messagesElement =\r\n        state.messages.map(m =>\r\n            <Message message={m.message} key={m.id}/>);\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    if (!props.isAuth) return <Redirect to=\"/login\"/>\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return <div className={s.dialogs}>\r\n        <div className={s.dialogsItems}\r\n             activeClassName={s.activeLink}>\r\n            {dialogsElements}\r\n        </div>\r\n        <div className={s.messages}>\r\n            {messagesElement}\r\n        </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n\r\n}\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","E:\\React\\git\\skara-social-net\\src\\Components\\Hoc\\withAuthComponent.jsx",[],"E:\\React\\git\\skara-social-net\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["182","183"],"import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus.jsx\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return ( <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img\r\n                    src=\"https://static5.depositphotos.com/1003371/521/i/600/depositphotos_5214674-stock-photo-tropical-sea-sunset.jpg\"/>\r\n{/*        <div className={s.descriptionBlock}>\r\n                    <img src={props.profile.photos.large}/>*/}\r\n                    <ProfileStatusWithHooks status={props.status}\r\n                                   updateStatus={props.updateStatus}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n    export default ProfileInfo;","E:\\React\\git\\skara-social-net\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.jsx",["184"],"import React from \"react\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {addPostActionCreator}\r\n    from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\nconst MyPostsConteiner = connect\r\n(mapStateToProps, mapDispatchToProps) (MyPosts);\r\nexport default MyPostsConteiner;","E:\\React\\git\\skara-social-net\\src\\Components\\Dialogs\\DialogItem\\DialogItem.jsx",[],"E:\\React\\git\\skara-social-net\\src\\Components\\Dialogs\\Message\\Message.jsx",[],"E:\\React\\git\\skara-social-net\\src\\Components\\Dialogs\\AddMessageForm\\AddMessageForm.jsx",[],"E:\\React\\git\\skara-social-net\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.jsx",["185"],"import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.props.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>\r\n                        {this.state.status || \"-------\"}\r\n                    </span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange}\r\n                        autoFocus={true}\r\n                           onBlur={this.deactivateEditMode}\r\n                           value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","E:\\React\\git\\skara-social-net\\src\\Components\\Profile\\MyPosts\\MyPosts.jsx",["186"],"import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../utils/FormsControls\";\r\nimport {required, maxLengthCreator} from \"../../../utils/validators/validator\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea}\r\n            validate={[required, maxLength10]}/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n    let postElements = props.posts.map(p => <Post message={p.message}\r\n                                                  likesCount={p.likesCount} avatar={p.avatar}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n        let onAddPost = (values) => {\r\n            props.addPost(values.newPostText);\r\n        }\r\n\r\n        return (\r\n            <div className={s.postsBlock}>\r\n                <h3>My posts</h3>\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n                <div className={s.posts}>\r\n                    {postElements}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    export default MyPosts","E:\\React\\git\\skara-social-net\\src\\Components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx",["187"],"import React, {useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={ activateEditMode }>\r\n                    {props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true}\r\n                       onBlur={ deactivateEditMode }\r\n                       value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","E:\\React\\git\\skara-social-net\\src\\utils\\FormsControls.jsx",["188"],"import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"./validators/validator\";\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, components,\r\n                            props = {}, text = \"\" ) => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators} component={components}\r\n            {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n\r\n/*\r\n{createField(\"Email\", \"email\",\r\n    [required], Input)}\r\n{createField(\"Password\", \"password\",\r\n    [required], Input,\r\n    {type: \"password\"})}\r\n{createField(null, \"rememberMe\",\r\n    [], Input, {type: \"checkbox\"},\r\n    \"remember me\")}*/\r\n","E:\\React\\git\\skara-social-net\\src\\utils\\validators\\validator.jsx",[],"E:\\React\\git\\skara-social-net\\src\\Components\\Profile\\MyPosts\\Post\\Post.jsx",[],"E:\\React\\git\\skara-social-net\\src\\utils\\object-helpers.js",[],"E:\\React\\git\\skara-social-net\\src\\utils\\Paginator.jsx",[],"E:\\React\\git\\skara-social-net\\src\\Components\\Users\\User.jsx",["189"],"import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../man-300x300.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => { unfollow(user.id) }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => { follow(user.id) }}>\r\n                                Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;\r\n\r\n\r\n\r\n",{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":4,"column":16,"nodeType":"196","messageId":"197","endLine":4,"endColumn":26},{"ruleId":"198","severity":1,"message":"199","line":17,"column":13,"nodeType":"200","endLine":17,"endColumn":16},{"ruleId":"194","severity":1,"message":"201","line":1,"column":9,"nodeType":"196","messageId":"197","endLine":1,"endColumn":16},{"ruleId":"194","severity":1,"message":"202","line":2,"column":9,"nodeType":"196","messageId":"197","endLine":2,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":11,"column":17,"nodeType":"200","endLine":11,"endColumn":99},{"ruleId":"203","severity":1,"message":"204","line":15,"column":17,"nodeType":"200","endLine":15,"endColumn":99},{"ruleId":"203","severity":1,"message":"204","line":9,"column":17,"nodeType":"200","endLine":10,"endColumn":138},{"ruleId":"203","severity":1,"message":"204","line":14,"column":17,"nodeType":"200","endLine":14,"endColumn":91},{"ruleId":"203","severity":1,"message":"204","line":18,"column":17,"nodeType":"200","endLine":18,"endColumn":86},{"ruleId":"205","severity":1,"message":"206","line":61,"column":65,"nodeType":"207","messageId":"208","endLine":61,"endColumn":67},{"ruleId":"203","severity":1,"message":"204","line":6,"column":9,"nodeType":"200","endLine":6,"endColumn":32},{"ruleId":"209","severity":1,"message":"210","line":49,"column":1,"nodeType":"211","messageId":"212","endLine":119,"endColumn":2},{"ruleId":"194","severity":1,"message":"213","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":13},{"ruleId":"203","severity":1,"message":"204","line":8,"column":9,"nodeType":"200","endLine":8,"endColumn":110},{"ruleId":"194","severity":1,"message":"214","line":21,"column":9,"nodeType":"196","messageId":"197","endLine":21,"endColumn":23},{"ruleId":"194","severity":1,"message":"215","line":4,"column":8,"nodeType":"196","messageId":"197","endLine":4,"endColumn":21},{"ruleId":"203","severity":1,"message":"204","line":14,"column":17,"nodeType":"200","endLine":15,"endColumn":138},{"ruleId":"194","severity":1,"message":"213","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":13},{"ruleId":"194","severity":1,"message":"216","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":9},{"ruleId":"194","severity":1,"message":"217","line":28,"column":9,"nodeType":"196","messageId":"197","endLine":28,"endColumn":23},{"ruleId":"194","severity":1,"message":"216","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":9},{"ruleId":"194","severity":1,"message":"218","line":4,"column":9,"nodeType":"196","messageId":"197","endLine":4,"endColumn":17},{"ruleId":"203","severity":1,"message":"204","line":14,"column":25,"nodeType":"200","endLine":15,"endColumn":60},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'authAPI' is defined but never used.","'stopSubmit' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'React' is defined but never used.","'newMessageBody' is assigned a value but never used.","'ProfileStatus' is defined but never used.","'s' is defined but never used.","'newPostElement' is assigned a value but never used.","'required' is defined but never used.","no-global-assign","no-unsafe-negation"]